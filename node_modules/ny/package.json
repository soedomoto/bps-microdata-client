{
  "name": "ny",
  "version": "0.0.1",
  "dependencies": {
    "step": "0.0.6"
  },
  "devDependencies": {},
  "optionalDependencies": {},
  "author": {
    "name": "Soedomoto",
    "email": "soedomoto@gmail.com"
  },
  "scripts": {},
  "license": "LGPL-3.0",
  "description": "Node yii middleware",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/soedomoto/ny.git"
  },
  "main": "index.js",
  "homepage": "https://github.com/soedomoto/ny",
  "bugs": {
    "url": "https://github.com/soedomoto/ny/issues"
  },
  "keywords": [
    "yii",
    "node",
    "nodejs",
    "express",
    "expressjs",
    "restify",
    "hapi",
    "hapijs",
    "koa",
    "koajs",
    "javascript",
    "js"
  ],
  "engine": "node >= 0.10.x",
  "maintainers": [
    {
      "name": "Soedomoto",
      "email": "soedomoto@gmail.com"
    }
  ],
  "dist": {},
  "directories": {},
  "gitHead": "65237a84252986a77a1fd30dca4db8715afeeffd",
  "readme": "Ny - a minimalistic middleware to make nested modular ExpressJS MVC\r\n======================================================================\r\nNy is an abbreviation of NodeYii. Inspired by Yii capabilities to create modular MVC\r\n\r\nWhat's awesome about Ny?\r\n------------------------\r\n* It can create unlimited level modular ExpressJS MVC\r\n* Each module (at every level) is an ExpressJS application\r\n* Each module can contains own controllers and views\r\n\r\nHow do I use Ny?\r\n----------------\r\nCreate structures look like it :\r\n\r\n\tExpressApp\r\n\t|-- modules\r\n\t|-- |-- Module1.js\r\n\t|-- |-- controllers\r\n\t|-- |-- |-- Controller11.js\r\n\t|-- |-- views\r\n\t|-- |-- modules\r\n\t|-- |-- |-- Module2.js\r\n\t|-- |-- |-- controllers\r\n\t|-- |-- |-- |-- Controller21.js\r\n\t|-- |-- |-- views\r\n\t|-- index.js\r\n\r\nWrite this code and let Ny search for all modules and it's controllers and views : \r\n\r\n\tvar MScanner = require('ny').ModuleScanner;\r\n\tMScanner.scan(__dirname).apply(app);\r\n\r\nYour module should be an instance of express :\r\n\r\n\tvar express = require('express'), \r\n\t\tpath = require('path');\r\n\r\n\tvar router = module.exports = express();\r\n\t\trouter.engine('ejs', require('ejs-locals'));\r\n\t\trouter.set('view engine', 'ejs');\r\n\t\trouter.url = '/admin';\r\n\r\nYour controller should be an instance of express router : \r\n\r\n\tvar express = require('express');\r\n\r\n\tvar router = module.exports = express.Router({mergeParams: true});\r\n\t\trouter.url = '/'\r\n\r\n\t\trouter.get('/', function(req, res) {\r\n\t\t\tres.render('HomeIndex')\r\n\t\t});\r\n\r\n\t\trouter.post('/', function(req, res) {\r\n\t\t\tres.render('HomeIndex')\r\n\t\t});",
  "readmeFilename": "README.md",
  "_id": "ny@0.0.1",
  "_shasum": "51ca08d7fc4b0a7b202603a826b755800603ee44",
  "_from": "git+https://github.com/soedomoto/ny.git",
  "_resolved": "git+https://github.com/soedomoto/ny.git#65237a84252986a77a1fd30dca4db8715afeeffd"
}
